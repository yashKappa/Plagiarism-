<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.8.335/pdf.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/mammoth/1.6.0/mammoth.browser.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.27.0/ace.js"></script>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/boxicons@2.1.3/css/boxicons.min.css">
  <link href='https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css' rel='stylesheet'>
  <link rel="stylesheet" href="file.css">   
  <link rel="database" href="../database.js">
  <link rel="script" href="/student user/script.js">
    <title>Users Files Table</title>
</head>

<!-- user.ejs -->

<body>
  <div class="sidebar">
    <button id="backButton"><i class="fas fa-arrow-left"></i> Back</button>
    <div class="img"><div id="image-container1"></div></div>
    <a class="no" href="../info"><i class="fas fa-cog"> </i>Setting</a>
    <a href="../profile" id="hideLink"><i class="fas fa-user"></i> Profile</a>
    <a href="../teacher_profile" id="teacherLink"><i class="fas fa-user"></i> Profile</a>    
    <a href="../developer_profile" id="developLink"><i class="fas fa-user"></i>dev Profile</a>    
    <a class="active" href="../user"><i class="fas fa-poll"> </i>Status</a>
    <div class="home">
    <a class="fea" href="../student user/userpanel.html"><i class="fas fa-home"> </i>Home</a>
    <a class="feat" id="logout-btn">
      <i class="fas fa-sign-out-alt"></i> Sign Out
  </a>
  
</div>

<div id="logout-popup" class="popup">
  <h2>Logout Confirmation</h2>
  <p>Are you sure you want to logout?</p>
  <button href="/logout" id="logout-yes">Yes</button>
  <button id="logout-no">No</button>
</div> </div>


<div class="content">
  <div class="bb">
  </div>
  <div class="container">
      <div class="header">
          <h1 class="message">Users Project Repository</h1>
          <div class="actions">
              <i class="bx bx-search"></i>
              <i class="bx bx-filter"></i>
          </div>
      </div>
      <% if (data && data.length > 0) { %>
        <p class="message">Total projects displayed: <%= data.length %></p>
        <% } %>
     
      <form id="deleteForm" action="/user/delete" method="post">
        <table border="1">
          <tr>
            <th>Username</th>
            <th>Project name</th>
            <th>Summary</th>
          </tr>
          <% data.forEach(row => { %>
            <tr>
              <td><p class="data"><%= row.username %></p></td>
              <td>
                <p class="data">
                  <!-- Update the link to point to the related route with username and project name parameters -->
                  <a class="data" href="/related/<%= row.username %>/<%= row.project_name %>"><%= row.project_name %></a>
                </p>
                <!-- Add hidden input fields to hold the data for deletion -->
                <input type="hidden" name="username" value="<%= row.username %>">
                <input type="hidden" name="projectName" value="<%= row.project_name %>">
                <!-- Update the input names to use an array notation -->
                <div>
                  Please confirm deletion
                  <input type="checkbox" id="checkbox-<%= row.username %>-<%= row.project_name %>" name="selectedProjects" value="<%= row.username %>-<%= row.project_name %>" onchange="toggleDeleteButton(this)" required />
                </div>
                <button type="button" onclick="deleteProject('<%= row.username %>', '<%= row.project_name %>')" disabled>Delete</button>                
              </td>
              <td><p class="datas"><%= row.summary %></p></td>
            </tr>
          <% }); %>
        </table>
        <% if (data && data.length > 0) { %>
       
          <% } else { %>
              <div class="message-container">
                <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTx-IWZyD_Nm6PWsdDzY8cerKQTmdplpLJfsw&usqp=CAU" alt="Your Image">
                <p>Data was not found or Empty</p>
              </div>
        <% } %>
      </form>
</div>
</body>
  
<script>
  var student = getCookie('student');
  var teacher = getCookie('teacher');
  var developer = getCookie('developer');
  var logged = getCookie('logged');
  
  if ((student || teacher || developer) && logged === 'true') {
      // If the user is a student, teacher, or developer and logged in, hide the appropriate links
      if (student) {
          document.getElementById('teacherLink').style.display = 'none';
          document.getElementById('teacherLink1').style.display = 'none';
          document.getElementById('teacherLink2').style.display = 'none';
          document.getElementById('developLink').style.display = 'none';

      } else if (teacher) {
          document.getElementById('hideLink').style.display = 'none';
          document.getElementById('hideLink1').style.display = 'none';
          document.getElementById('hideLink2').style.display = 'none';
          document.getElementById('developLink').style.display = 'none';

      } else if (developer) {
        document.getElementById('hideLink').style.display = 'none';
        document.getElementById('teacherLink').style.display = 'none';
        document.getElementById('teacherLink1').style.display = 'none';
        document.getElementById('teacherLink2').style.display = 'none';
        document.getElementById('hideLink1').style.display = 'none';
        document.getElementById('hideLink2').style.display = 'none';
      }
  }
  
// Function to get cookie value
function getCookie(name) {
    var cookies = document.cookie.split(';');
    for (var i = 0; i < cookies.length; i++) {
        var cookie = cookies[i].trim();
        if (cookie.startsWith(name + '=')) {
            return cookie.substring(name.length + 1);
        }
    }
    return '';
}


  document.getElementById('logout-btn').addEventListener('click', function(e) {
    e.preventDefault();
    document.getElementById('logout-popup').style.display = 'block';
});

document.getElementById('logout-no').addEventListener('click', function() {
    document.getElementById('logout-popup').style.display = 'none';
});

document.getElementById('logout-yes').addEventListener('click', function() {
    // Handle logout here
    document.getElementById('logout-popup').style.display = 'none';
    window.location.href = '/logout';
});

function saveImage() {
  const input = document.getElementById('image-input');
  const file = input.files[0];
  
  // Check if username exists in cookies
  const username = getCookie('username');
  if (!username) {
      alert("Please enter your username first.");
      return;
  }
  
  if (file) {
      const reader = new FileReader();
      reader.onload = function(event) {
          const imageData = event.target.result;
          // Store image data along with username in local storage
          localStorage.setItem(username + '_savedImage', imageData);
          displayImageInMultipleContainers(imageData);
      };
      reader.readAsDataURL(file);
  }
}

function displayImageInMultipleContainers(imageData) {
  // Get both image containers by their IDs
  const container1 = document.getElementById('image-container1');
  const container2 = document.getElementById('image-container2');
  
  // Set the inner HTML of both containers to display the image
  container1.innerHTML = `<img src="${imageData}" alt="Saved Image">`;
  container2.innerHTML = `<img src="${imageData}" alt="Saved Image">`;
}

// Load the image from localStorage when the page loads
window.onload = function() {
  // Check if username exists in cookies
  const username = getCookie('username');
  if (!username) {
      const usernamePrompt = prompt("Please enter your username:");
      if (usernamePrompt) {
          document.cookie = `username=${usernamePrompt}`;
      }
  }
  
  const savedImageData = localStorage.getItem(username + '_savedImage');
  if (savedImageData) {
      displayImageInMultipleContainers(savedImageData);
  }
};


// Function to get the value of a cookie by its name
function getCookie(name) {
  const cookies = document.cookie.split(';');
  for (let i = 0; i < cookies.length; i++) {
      const cookie = cookies[i].trim();
      if (cookie.startsWith(name + '=')) {
          return cookie.substring(name.length + 1);
      }
  }
  return null;
}

  function toggleDeleteButton(checkbox) {
    const deleteButton = checkbox.parentNode.nextElementSibling;
    deleteButton.disabled = !checkbox.checked;
  }

  function deleteProject(username, projectName) {
    const checkboxId = `checkbox-${username}-${projectName}`;
    const checkbox = document.getElementById(checkboxId);
    
    // Check if the checkbox is checked
    if (checkbox.checked) {
      const selectedProjects = [{ username, projectName }];

      fetch('/user/delete', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ selectedProjects }),
      })
      .then(response => response.json())
      .then(data => {
        console.log('Server response:', data);

        if (data.success) {
          // Update the webpage dynamically
          const rowId = `checkbox-${username}-${projectName}`;
          const row = document.getElementById(rowId);

          if (row) {
            console.log('Removing row:', rowId);
            row.closest('tr').remove(); // Remove the entire row from the table
          } else {
            console.log('Row not found:', rowId);
          }
        }

        // Handle any additional logic or UI updates
      })
      .catch(error => {
        console.error('Error:', error);
        // Log the server response error
        if (error && error.message) {
          console.error('Server Response Error:', error.message);
        }
        // Handle errors or show an error message to the user
      });
    } else {
      alert('Please check the confirmation checkbox before deleting.');
    }
  }
  
  
document.getElementById("backButton").addEventListener("click", function () {
window.history.back();
});

// Assuming you have jQuery included
$(document).ready(function () {
// Add a click event listener to all elements with the class 'download-link'
$('.download-link').click(function (e) {
e.preventDefault(); // Prevent the default link behavior

// Get the file ID from the data attribute
const fileId = $(this).data('file-id');

// Fetch the file content from the server
fetch(`/getFileContent/${fileId}`)
.then(response => response.text())
.then(content => {
// Create a blob with the file content
const blob = new Blob([content], { type: 'text/plain' });

// Create a link element
const downloadLink = document.createElement('a');

// Set the download attribute with the filename
downloadLink.download = $(this).data('filename');

// Set the href attribute with the blob URL
downloadLink.href = URL.createObjectURL(blob);

// Append the link to the body
document.body.appendChild(downloadLink);

// Trigger a click on the link to start the download
downloadLink.click();

// Remove the link from the DOM
document.body.removeChild(downloadLink);
})
.catch(error => {
console.error('Error fetching file content:', error);
});
});
});


  // Check user's dark mode preference from localStorage
  const darkModePreference = localStorage.getItem('darkMode');

  // Function to toggle dark mode
  function toggleDarkMode() {
    document.body.classList.toggle("dark-theme");

    if (document.body.classList.contains("dark-theme")) {
      localStorage.setItem('darkMode', 'enabled');
      dark.src = "moons.png";
      loo.src = "dark1.png";
    } else {
      localStorage.setItem('darkMode', 'disabled');
      dark.src = "suns.png";
      loo.src = "light1.png";
    }
  }

  // Apply dark mode based on user preference
  if (darkModePreference === 'enabled') {
    document.body.classList.add('dark-theme');
    dark.src = "moons.png";
    loo.src = "dark1.png";
  } else {
    dark.src = "suns.png";
    loo.src = "light1.png";
  }

  dark.onclick = toggleDarkMode;

</script>

<style>
  body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background:var(--background-color);
}

.datas{
  width: 35vw;
  text-align: justify;
  margin-right: -6rem;
}

.sidebar {
    width: 250px;
    height: 100%;
    background-color: #333;
    color: #fff;
    position: fixed;
    top: 0;
    left: 0;
    overflow-x: hidden;
    padding-top: 20px;
}

.sidebar a {
    padding: 10px;
    text-decoration: none;
    color: #fff;
    display: block;
}

.sidebar a:hover {
    background-color: #555;
}

.content {
    margin-left: 250px;
    padding: 10px;
}

.sidebar button {
    font-size: 15px;
    padding: 7px 15px;
    cursor: pointer;
    background-color: #000000;
    color: #fff;
    border: none;
    border-radius: 5px;
    transition: background-color 0.3s ease;
    margin-top: 10px;
    margin-bottom: 1rem;
    margin-left: 1rem;

}

button:hover {
    background-color: #0056b3;
}

.sidebar a{
    padding-left: 15px;
    width: 80%;
    margin-left: 10px;
    border-radius: 0.5rem;
    margin-top: 0.5rem;
}


.sidebar a.active {
    background-color: #2b3ac4;
    box-shadow: 0 0 10px rgba(255, 254, 254, 0.329);
}

.active:hover{
    background-color: #fdfdfd;
}

.sidebar .no{
    margin-top: 2rem;
}

.sidebar .home{
    width: 100%;
    margin-top: 7rem;
    color: #000000;
    border-top: 1px solid white;
}

.sidebar .home:hover{
    color: #fff;
}

.sidebar i{
    margin-right: 0.5rem;
}

.sidebar .feat{
    background-color: #e40606b6;
    font-weight: bold;
    margin-top: 1rem;
}

.sidebar .feat:hover{
    background-color: #ff0000b6;
    font-weight: bold;
    border: 1px solid white;
}

.fea{
    padding: 0.5rem;
}


#image-container1 {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: 1.4rem;
}

#image-container1 img {
  width: 8vw;
  height: 15vh;
  object-fit: cover;
  border-radius: 50%;
  border: 3px solid white;
}

.popup {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: #fff;
  padding: 20px;
  border: 1px solid #ccc;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
  z-index: 1000;
  display: none;
  color: #000000;
  border-radius: 0.5rem;
}

.popup h2 {
  margin-top: 0;
}

.popup button {
  margin-left: 2.6rem;
}

.popup button:hover {
  background-color: red;
}


:root {
  --background-color: #f5f5f5;
  --color: #333;
  --box-color: #7e7f83;
  --shadow-color:rgb(0, 0, 0);
}

.dark-theme {
  --background-color: #171718;
  --color: #fff;
  --box-color: #ffffff70;
  --shadow-color:white;
}
    
    .container {
        max-width: 1000px;
        margin: 20px auto;
        background-color: #fff;
        padding: 20px;
        box-shadow: 0 4px 8px var(--box-color);
        transition: background-color 0.3s ease;
        border-radius: 2rem;
    }
    
    .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    
    h1 {
        margin: 0;
        transition: color 0.3s ease;
    }
    
    .actions {
        display: flex;
    }
    
    .content i {
        font-size: 15px;
        color: #ffffff;
        cursor: pointer;
        transition: color 0.3s ease;
    }
    
    i:hover {
        color: #333;
    }
    
    button {
      font-size: 15px;
      padding: 7px 15px;
      cursor: pointer;
      background-color: #007bff;
      color: #fff;
      border: none;
      border-radius: 5px;
      transition: background-color 0.3s ease;
      margin-top: 10px;
      margin-bottom: 1rem;
      margin-left: 1rem;
    }
    
    button:hover {
        background-color: #0056b3;
    }
    
    .table-container {
        margin-top: 20px;
        overflow-x: auto;
    }
    
    table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 1rem;
    }
    
    th, td {
        border: 1px solid #ddd;
        padding: 15px;
    }
    
    th {
        background-color: #007bff;
        color: #fff;
    }
    
    .data{
      width: 10vw;
    }
    a.data {
        text-decoration: none;
        color: #007bff;
        transition: color 0.3s ease;
    }
    
    a.data:hover {
        color: #0056b3;
    }
      
    .message {
        color: #ffffff;
        background-color: #1d1d1d;
        padding: 10px;
        font-weight: bold;
        text-align: center;
        border-radius: 0.5rem;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.849);
      }
    
    /* Dark mode styles */
    .dark-mode .container {
        background-color: #222;
        color: #fff;
    }
    
    .dark-mode h1 {
        color: #fff;
    }
    
    .dark-mode th {
        background-color: #333;
        color: #fff;
    }
    
    .dark-mode a.data {
        color: #1e90ff;
    }
    
    .dark-mode a.data:hover {
        color: #00bfff;
    }
    
    .msg {
      display: flex;
      justify-content: center;
      align-items: center;
      text-align: center; /* This centers the text within the <td> element */
    }
    
    .message-container {
      text-align: center;
    }
    
    .message-container img {
      max-width: 100%;
      max-height: 80%;
      margin-top: 2rem;
    }
</style>
</html>
