<!DOCTYPE html>
<html lang="en">
<head>
    <title>Anti duplicate software</title>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.8.335/pdf.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/mammoth/1.6.0/mammoth.browser.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.27.0/ace.js"></script>
    <link rel="stylesheet" href="../student user/userpanel.css">   
    <link rel="node" href="../node.js">
    <link rel="script" href="script.js">

</head>
<body>
    <nav>
       
        <div class="Pname">
            <img class="logo" id="loo" src="light1.png">
        <div class="menu">
          <span class="feat"><a class="no" href="../student user/userpanel.html">Home</a></span>
          <span class="feat"><a class="Active" href="../plagi">Search</a></span>
          <span class="feat"><a class="no" href="../student user/one-to-one.html">one-to-one</a></span>
          <span class="feat"><a class="no" href="../student user/self detect.html">self detect</a></span>
          <span class="feat"><a class="no" href="../plagiarism">All plagi</a></span>
          <span class="feat"><a class="no" href="../student user/userupload.html">File upload</a></span>
                
            <!--<span class="feat"><a class="no" href="http://localhost:3000/">File upload</a></span>-->
            <div class="logout">
                <div class="table1">
                    <div class="profile-dropdown">
                        <a href="profile.html">
                            <div class="img"><div id="image-container1"></div></div>
                        </a>
                        <div class="dropdown-menu">
                            <ul>
                                <li><a href="#"><img id="dark" src="suns.png"></a></li>
                                <li><span ><a href="../student user/profile.html"  class="set" ><i class="fas fa-cog"></i>setting</a></li></span>
                                <li><span class="fe" ><a id="logout-btn" class="noo">log out</a>
                                </span></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
    </nav><br><br><br><br><br>

    <div class="option">
        <a class="goe feat" id="feat">Search Projects</a>
        <a class="goe feat" href="../new_ideas">New projects ideas</a>
      </div>
      <div class="search">
        <div class="input">
          <input type="text" id="searchInput" placeholder="Search project name...">
          <button id="searchButton">Search <i class="fas fa-search"></i></button>
        </div>
      </div>
      
      <div class="container">
        <div class="order">
          <div class="head2">
            <h3>Projects</h3>
            <i class='bx bx-search' ></i>
            <i class='bx bx-filter' ></i>
          </div>
          <table id="projectTable">
            <thead>
              <tr>
                <th>Username</th>
                <th>Project name</th>
                <th>Summary</th>
              </tr>
            </thead>
            <tbody>
              <% if (data && data.length > 0) { %>
                <% data.forEach(row => { %>
                <tr>
                  <td>
                    <h1>Username</h1><p class="data"><%= row.username %></p>
                  </td>
                  <td>
                    <h1>Project name</h1>( Click on the Project name for files)
                    <p class="data">
                      <!-- Update the link to point to the related route with username and project name parameters -->
                      <a href="/fileDetails/<%= row.username %>/<%= row.project_name %>"><%= row.project_name %></a>
                    </p>
                  </td>
                  <td>
                    <h1>Summary</h1>
                    <p class="data"><%= row.summary %></p>
                  </td>
                  <td>
                    <h1>Frontend Technology used</h1>
                    <p class="data"><%= row.front %></p>
                  </td>
                  <td>
                    <h1>Backend Technology used</h1>
                    <p class="data"><%= row.back %></p>
                  </td>
                  <td>
                    <h1>Year</h1>
                    <p class="data"><%= row.year %></p>
                  </td>
                  
                </tr>
                <% }); %>
              <% } else { %>
                <div class="msg" id="msg-container" >
                  <img class="message" src="notdata.png">
              </div>
              
              <% } %>
              <div class="msg" id="msg-container" >
                <img class="message" src="https://www.archanaprojects.com/Frontend/images/not-found.png">
            </div>
            </tbody>
          </table>
        </div>
      </div>

     
        
        <script>

         


          const darkModePreference = localStorage.getItem('darkMode');
  
  // Function to toggle dark mode
  function toggleDarkMode() {
    document.body.classList.toggle("dark-theme");
  
    if (document.body.classList.contains("dark-theme")) {
      localStorage.setItem('darkMode', 'enabled');
      dark.src = "moons.png";
      loo.src = "dark1.png";
    } else {
      localStorage.setItem('darkMode', 'disabled');
      dark.src = "suns.png";
      loo.src = "light1.png";
    }
  }
  
  // Apply dark mode based on user preference
  if (darkModePreference === 'enabled') {
    document.body.classList.add('dark-theme');
    dark.src = "moons.png";
    loo.src = "dark1.png";
  } else {
    dark.src = "suns.png";
    loo.src = "light1.png";
  }
  
  dark.onclick = toggleDarkMode;
          // Function to display the saved image

          function displaySavedImage(imageData) {
            const imageContainer = document.getElementById('image-container1');
            const image = new Image();
            image.src = imageData;
            imageContainer.appendChild(image);
          }
          
          // Load the saved image from local storage when the page loads
          window.onload = function() {
            const savedImageData = localStorage.getItem('kappa_savedImage');
            if (savedImageData) {
                displaySavedImage(savedImageData);
            }
          };
          
            function saveImage() {
            const input = document.getElementById('image-input');
            const file = input.files[0];
            
            // Check if username exists in cookies
            const username = getCookie('username');
            if (!username) {
                alert("Please enter your username first.");
                return;
            }
            
            if (file) {
                const reader = new FileReader();
                reader.onload = function(event) {
                    const imageData = event.target.result;
                    // Store image data along with username in local storage
                    localStorage.setItem(username + '_savedImage', imageData);
                    displayImageInMultipleContainers(imageData);
                };
                reader.readAsDataURL(file);
            }
        }
        
        function displayImageInMultipleContainers(imageData) {
            // Get both image containers by their IDs
            const container1 = document.getElementById('image-container1');
            const container2 = document.getElementById('image-container2');
            
            // Set the inner HTML of both containers to display the image
            container1.innerHTML = `<img src="${imageData}" alt="Saved Image">`;
            container2.innerHTML = `<img src="${imageData}" alt="Saved Image">`;
        }
        
        // Load the image from localStorage when the page loads
        window.onload = function() {
            // Check if username exists in cookies
            const username = getCookie('username');
            if (!username) {
                const usernamePrompt = prompt("Please enter your username:");
                if (usernamePrompt) {
                    document.cookie = `username=${usernamePrompt}`;
                }
            }
            
            const savedImageData = localStorage.getItem(username + '_savedImage');
            if (savedImageData) {
                displayImageInMultipleContainers(savedImageData);
            }
        };
        
        // Function to get the value of a cookie by its name
        function getCookie(name) {
            const cookies = document.cookie.split(';');
            for (let i = 0; i < cookies.length; i++) {
                const cookie = cookies[i].trim();
                if (cookie.startsWith(name + '=')) {
                    return cookie.substring(name.length + 1);
                }
            }
            return null;
        }
  document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('searchInput');
    const projectTable = document.getElementById('projectTable');
    const rows = projectTable.getElementsByTagName('tr');
    const searchButton = document.getElementById('searchButton');
    const msgContainer = document.getElementById('msg-container');

    function filterRows() {
        const searchText = searchInput.value.toLowerCase();
        let dataFound = false; // Flag to track if data is found

        for (let i = 1; i < rows.length; i++) {
            const projectName = rows[i].getElementsByTagName('td')[1].innerText.toLowerCase();
            if (projectName.includes(searchText)) {
                rows[i].style.display = '';
                dataFound = true; // Set flag to true if data is found
            } else {
                rows[i].style.display = 'none';
            }
        }

        // Show or hide message container based on dataFound flag
        if (dataFound) {
            msgContainer.style.display = 'none'; // Hide the message container if data is found
        } else {
            msgContainer.style.display = 'block'; // Show the message container if no data is found
        }
    }

    searchButton.addEventListener('click', function(event) {
        event.preventDefault();
        filterRows();
    });

    searchInput.addEventListener('keyup', function(event) {
        if (event.keyCode === 13) {
            event.preventDefault();
            filterRows();
        }
    });

    filterRows(); // Initial filter when the page loads
});

  
  // Next page button event listener
  document.getElementById('nextButton').addEventListener('click', () => {
    console.log("Next button clicked");
    if (currentPage < Math.ceil(rows.length / projectsPerPage)) {
      currentPage++;
      displayProjects();
    }
  });
  
  // Reset display to pagination-based display when search input is cleared
  searchInput.addEventListener('input', () => {
    console.log("Input value:", searchInput.value);
    if (searchInput.value === '') {
      currentPage = 1; // Reset current page to 1
      displayProjects(); // Display projects based on pagination
    }
  });
  
  
  
        </script>
        
        
        <style>
  
          #searchButton{
            background-color: #d83030;
            font-size:small;
            padding: 7px;
            border: none;
            color: #ffffff;
            border-radius: 0.3rem;
          }
          /* Styles for the search bar */
      #searchInput {
        width: 300px;
        padding: 10px;
        margin-bottom: 20px;
        border: 1px solid #ccc;
        border-radius: 5px;
        box-sizing: border-box;
        font-size: 16px;
        margin-top: 1rem;
      }
      
      /* Styles for the search bar placeholder */
      #searchInput::placeholder {
        color: #999;
      }
      
      /* Styles for the search bar on focus */
      #searchInput:focus {
        outline: none;
        border-color: #4CAF50;
        box-shadow: 0 0 5px rgba(76, 175, 80, 0.5);
      }
      
      .search{
        margin-top: 1rem;
        margin-bottom: 2rem;
        text-align-last: center;
        justify-content: center;
        width: 100%;
        display: flex;
      }
      
      .container {
        width: 80vw;
        margin: 0 auto;
        color: var(--h1-color);
      }
      
    
      
      .head2 {
        margin-bottom: 20px;
      }
      
    
    
      h3{
        color: var(--primary-color);
        background: var(--h1-color);
        padding: 10px;
        border-radius: 0.3rem;
        text-align: center;
        box-shadow: 0 0 10px var(--h1-color);
        border: 1px solid var(--primary-color);
      }
    
      #projectTable {
        width: 100%;
      }
      
      #projectTable tr {
        display: flex;
        flex-direction: column;
        border: 1px solid var(--h1-color);
        margin-bottom: 4rem;
        margin-top: 1rem;
        border-radius: 0.5rem;
      }
      
      #projectTable th,
      #projectTable td {
        padding: 10px 10px 0px 10px;
      }
      
      #projectTable th {
        font-weight: bold;
      }
      
      .datas {
        display: flex;
        flex-direction: row;
      }
      
      .datas h4 {
        margin: 0;
        width: 120px; /* Adjust as needed for label width */
      }
      
      .datas p {
        margin: 0;
      }
      
    
    .option {
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 10px;
      
    }
    
    .goe {
      text-align: center;
      background-color:var(--study-color);
      margin: 0 5px; /* Adjust the margin as needed */
      padding: 5px 10px; /* Adjust the padding as needed */
      text-decoration: none;
      color: var(--third-color);
      border-radius: 5px;
    }
    
    .goe:hover {
      background-color: var(--error-color);
    }
    
    #feat{
      text-decoration: underline;
      box-shadow: 0 0 5px var(--h1-color);
      border: 1px solid var(--third-color);
    }
    
    .msg {
      display: flex;
      justify-content: center;
      align-items: center;
      text-align: center; /* This centers the text within the <span> element */
      background-color: none;
    }
    
    .message-container {
      text-align: center;
    }
    
    .message {
      font-size: x-large;
      padding: 10px;
    }
    
    .message-container img {
      max-width: 100%;
      max-height: 80%;
    }
    
    .input{
      align-content: center;
      padding: 0px 70px 0px 70px;
      border-radius: 0.5rem;
      width: 30vw;
      background-color: #2268ff;
    }
    
    i{
      color: var(--h1-color);
    }
    
    .no{
      margin-bottom: 3rem;
    }
    
    thead{
      display: none;
    }
    
    .container h1 {
      font-size: 1.5em;
      margin-bottom: 0.3rem;
      background: var(--study-color);
      padding: 6px 0px 6px 10px;
      border-radius: 0.5rem;
    }
    
    .datas {
      margin-bottom: 4rem;
      border: 2px solid var(--h1-color);
      padding: 20px;
      border-radius: 0.5rem
    }
    
    .data {
      font-size: 1em;
      margin-bottom: 1rem;
      margin-top: 0.5rem;
      background: var(--copied-color);
      padding: 1rem;
      border-radius: 0.5rem;
      box-shadow: 0 1px 3px var(--h1-color); /* Add box shadow */
    }
    
    .Download {
      background-color: #f80808;
      padding: 10px;
      display: flex;
      width: max-content;
      margin-bottom: 1rem;
      border-radius: 0.3rem;
      color: white;
      transition: background-color 0.3s, transform 0.3s;
    }
    
    .Download:hover {
      background-color: #d60606; 
      transform: translateY(-4px); 
    }
    
    .Download i{
      margin-right: 0.5rem;
    }
    
    .set i{
      color: white;
    }
    
      </style>
      </html>
      